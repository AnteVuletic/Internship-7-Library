// <auto-generated />
using System;
using Internship_7_Library.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Internship_7_Library.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190202230856_Fix-Authors")]
    partial class FixAuthors
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorPersonPersonId");

                    b.HasKey("AuthorId");

                    b.HasIndex("AuthorPersonPersonId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookInfoTypeBookId");

                    b.Property<int>("State");

                    b.HasKey("BookId");

                    b.HasIndex("BookInfoTypeBookId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Institution", b =>
                {
                    b.Property<int>("InstitutionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.HasKey("InstitutionId");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InstitutionId");

                    b.Property<int?>("PersonId");

                    b.Property<bool>("Professor");

                    b.HasKey("MemberId");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("PersonId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("Name");

                    b.HasKey("PublisherId");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Rent", b =>
                {
                    b.Property<int>("RentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId");

                    b.Property<int>("PersonId");

                    b.Property<DateTime?>("ReturnDate");

                    b.Property<DateTime>("StartOfRent");

                    b.HasKey("RentId");

                    b.HasIndex("BookId");

                    b.HasIndex("PersonId");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonId");

                    b.Property<int>("Position");

                    b.HasKey("StaffId");

                    b.HasIndex("PersonId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Subscriber", b =>
                {
                    b.Property<int>("SubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfRenewal");

                    b.Property<int?>("PersonId");

                    b.Property<int?>("TypeSubscriptionSubscriptionId");

                    b.HasKey("SubscriberId");

                    b.HasIndex("PersonId");

                    b.HasIndex("TypeSubscriptionSubscriptionId");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookLimitAtOnce");

                    b.Property<string>("Category");

                    b.Property<int>("PricePerMonth");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.TypeBook", b =>
                {
                    b.Property<int>("TypeBookId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorInfoAuthorId");

                    b.Property<int?>("GenreId");

                    b.Property<string>("NumPages");

                    b.Property<int?>("PublisherId");

                    b.Property<string>("Title");

                    b.HasKey("TypeBookId");

                    b.HasIndex("AuthorInfoAuthorId");

                    b.HasIndex("GenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("TypeBooks");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Author", b =>
                {
                    b.HasOne("Internship_7_Library.Data.Entities.Models.Person", "AuthorPerson")
                        .WithMany("Authors")
                        .HasForeignKey("AuthorPersonPersonId");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Book", b =>
                {
                    b.HasOne("Internship_7_Library.Data.Entities.Models.TypeBook", "BookInfo")
                        .WithMany("PhysicalBooks")
                        .HasForeignKey("BookInfoTypeBookId");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Member", b =>
                {
                    b.HasOne("Internship_7_Library.Data.Entities.Models.Institution", "Institution")
                        .WithMany("Members")
                        .HasForeignKey("InstitutionId");

                    b.HasOne("Internship_7_Library.Data.Entities.Models.Person", "Person")
                        .WithMany("InstitutionMembers")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Rent", b =>
                {
                    b.HasOne("Internship_7_Library.Data.Entities.Models.Book", "Book")
                        .WithMany("Rents")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Internship_7_Library.Data.Entities.Models.Person", "Person")
                        .WithMany("Rents")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Staff", b =>
                {
                    b.HasOne("Internship_7_Library.Data.Entities.Models.Person", "Person")
                        .WithMany("Staff")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.Subscriber", b =>
                {
                    b.HasOne("Internship_7_Library.Data.Entities.Models.Person", "Person")
                        .WithMany("Subscribers")
                        .HasForeignKey("PersonId");

                    b.HasOne("Internship_7_Library.Data.Entities.Models.Subscription", "TypeSubscription")
                        .WithMany("Subscribers")
                        .HasForeignKey("TypeSubscriptionSubscriptionId");
                });

            modelBuilder.Entity("Internship_7_Library.Data.Entities.Models.TypeBook", b =>
                {
                    b.HasOne("Internship_7_Library.Data.Entities.Models.Author", "AuthorInfo")
                        .WithMany("BookInfos")
                        .HasForeignKey("AuthorInfoAuthorId");

                    b.HasOne("Internship_7_Library.Data.Entities.Models.Genre", "Genre")
                        .WithMany("BookInfos")
                        .HasForeignKey("GenreId");

                    b.HasOne("Internship_7_Library.Data.Entities.Models.Publisher", "Publisher")
                        .WithMany("BookInfos")
                        .HasForeignKey("PublisherId");
                });
#pragma warning restore 612, 618
        }
    }
}
